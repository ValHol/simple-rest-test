package com.valhol.SolstCodeExam.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.valhol.SolstCodeExam.dao.Phone;
import com.valhol.SolstCodeExam.dao.Contact;
import com.valhol.SolstCodeExam.dao.Address;
import com.valhol.SolstCodeExam.dao.ContactDetails;

import com.valhol.SolstCodeExam.dao.PhoneDao;
import com.valhol.SolstCodeExam.dao.ContactDao;
import com.valhol.SolstCodeExam.dao.AddressDao;
import com.valhol.SolstCodeExam.dao.ContactDetailsDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig phoneDaoConfig;
    private final DaoConfig contactDaoConfig;
    private final DaoConfig addressDaoConfig;
    private final DaoConfig contactDetailsDaoConfig;

    private final PhoneDao phoneDao;
    private final ContactDao contactDao;
    private final AddressDao addressDao;
    private final ContactDetailsDao contactDetailsDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        phoneDaoConfig = daoConfigMap.get(PhoneDao.class).clone();
        phoneDaoConfig.initIdentityScope(type);

        contactDaoConfig = daoConfigMap.get(ContactDao.class).clone();
        contactDaoConfig.initIdentityScope(type);

        addressDaoConfig = daoConfigMap.get(AddressDao.class).clone();
        addressDaoConfig.initIdentityScope(type);

        contactDetailsDaoConfig = daoConfigMap.get(ContactDetailsDao.class).clone();
        contactDetailsDaoConfig.initIdentityScope(type);

        phoneDao = new PhoneDao(phoneDaoConfig, this);
        contactDao = new ContactDao(contactDaoConfig, this);
        addressDao = new AddressDao(addressDaoConfig, this);
        contactDetailsDao = new ContactDetailsDao(contactDetailsDaoConfig, this);

        registerDao(Phone.class, phoneDao);
        registerDao(Contact.class, contactDao);
        registerDao(Address.class, addressDao);
        registerDao(ContactDetails.class, contactDetailsDao);
    }
    
    public void clear() {
        phoneDaoConfig.getIdentityScope().clear();
        contactDaoConfig.getIdentityScope().clear();
        addressDaoConfig.getIdentityScope().clear();
        contactDetailsDaoConfig.getIdentityScope().clear();
    }

    public PhoneDao getPhoneDao() {
        return phoneDao;
    }

    public ContactDao getContactDao() {
        return contactDao;
    }

    public AddressDao getAddressDao() {
        return addressDao;
    }

    public ContactDetailsDao getContactDetailsDao() {
        return contactDetailsDao;
    }

}
